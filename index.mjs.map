{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this, no-restricted-syntax */\n\n'use strict';\n\n// MODULES //\n\nvar setNonEnumerableReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar setNonEnumerable = require( '@stdlib/utils-define-nonenumerable-property' );\nvar isObject = require( '@stdlib/assert-is-object' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// MAIN //\n\n/**\n* Returns a constructor for creating a fluent interface for chaining together iterator methods.\n*\n* ## Notes\n*\n* -   We assume that each provided iterator function has the following function signature:\n*\n*     ```text\n*     function iterFcn( iterator[, ...args] ) {...}\n*     ```\n*\n*     where `iterator` is an input iterator and `args` are additional iterator function arguments (if any).\n*\n*\n* @param {Object} methods - an object mapping method names to iterator functions\n* @throws {TypeError} must provide an object\n* @throws {TypeError} object property values must be functions\n* @returns {Function} constructor\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n* var iterHead = require( '@stdlib/iter-head' );\n* var iterSome = require( '@stdlib/iter-some' );\n*\n* // Create a \"fluent\" interface:\n* var FluentIterator = iterFlow({\n*     'head': iterHead,\n*     'some': iterSome\n* });\n*\n* // Create a source iterator:\n* var arr = array2iterator( [ 0, 0, 1, 1, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* var it = new FluentIterator( arr );\n*\n* var bool = it.head( 5 ).some( 3 );\n* // returns true\n*\n* // Create another source iterator:\n* arr = array2iterator( [ 0, 0, 1, 0, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* it = new FluentIterator( arr );\n*\n* bool = it.head( 5 ).some( 3 );\n* // returns false\n*/\nfunction iterFlow( methods ) {\n\tvar keys;\n\tvar k;\n\tvar f;\n\tvar i;\n\tif ( !isObject( methods ) ) {\n\t\tthrow new TypeError( format( '0CQ4K', methods ) );\n\t}\n\t/**\n\t* Fluent interface iterator constructor.\n\t*\n\t* @private\n\t* @constructor\n\t* @param {Iterator} iterator - source iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @returns {FluentIterator} a \"fluent\" iterator\n\t*/\n\tfunction FluentIterator( iterator ) {\n\t\tif ( !( this instanceof FluentIterator ) ) {\n\t\t\treturn new FluentIterator( iterator );\n\t\t}\n\t\tif ( !isIteratorLike( iterator ) ) {\n\t\t\tthrow new TypeError( format( '0CQ49', iterator ) );\n\t\t}\n\t\tsetNonEnumerableReadOnly( this, '_source', iterator );\n\t\tsetNonEnumerable( this, '_done', false );\n\t\treturn this;\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tsetNonEnumerableReadOnly( FluentIterator.prototype, 'next', function next() {\n\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\tthrow new TypeError( format( '0CQ0K' ) );\n\t\t}\n\t\tif ( this._done ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn this._source.next();\n\t});\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tsetNonEnumerableReadOnly( FluentIterator.prototype, 'return', function finish( value ) {\n\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\tthrow new TypeError( format( '0CQ0K' ) );\n\t\t}\n\t\tthis._done = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t});\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\t/**\n\t\t* Returns the current iterator.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   This method allows the iterator to be iterable and thus able to be consumed, e.g., in `for..of` loops.\n\t\t*\n\t\t* @private\n\t\t* @returns {Iterator} iterator\n\t\t*/\n\t\tsetNonEnumerableReadOnly( FluentIterator.prototype, iteratorSymbol, function factory() { // eslint-disable-line max-len\n\t\t\treturn this;\n\t\t});\n\t}\n\n\t/**\n\t* Wraps an iterator function as a fluent interface method.\n\t*\n\t* @private\n\t* @param {Function} iterFcn - iterator function\n\t* @returns {Function} method wrapper\n\t*/\n\tfunction createMethod( iterFcn ) {\n\t\treturn method;\n\n\t\t/**\n\t\t* Iterator function wrapper.\n\t\t*\n\t\t* @private\n\t\t* @param {...*} [args] - method arguments\n\t\t* @throws {TypeError} `this` must be a fluent interface iterator\n\t\t* @returns {Iterator} iterator\n\t\t*/\n\t\tfunction method() {\n\t\t\tvar args;\n\t\t\tvar out;\n\t\t\tvar i;\n\n\t\t\tif ( !(this instanceof FluentIterator) ) {\n\t\t\t\tthrow new TypeError( format( '0CQ0K' ) );\n\t\t\t}\n\t\t\targs = [ this._source ];\n\t\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\t\targs.push( arguments[ i ] );\n\t\t\t}\n\t\t\tout = iterFcn.apply( null, args );\n\n\t\t\t// If the iterator function returns an iterator, in order to support subsequent chaining, we need to create a new fluent interface instance...\n\t\t\tif ( isIteratorLike( out ) ) {\n\t\t\t\treturn new FluentIterator( out );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n\n\t// Bind the provided iterator functions to the constructor prototype...\n\tkeys = objectKeys( methods );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tf = methods[ k ];\n\t\tif ( !isFunction( f ) ) {\n\t\t\tthrow new TypeError( format( '0CQ4L', k, f ) );\n\t\t}\n\t\tsetNonEnumerableReadOnly( FluentIterator.prototype, k, createMethod( f ) ); // eslint-disable-line max-len\n\t}\n\n\treturn FluentIterator;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFlow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a fluent interface for chaining together iterator methods.\n*\n* @module @stdlib/iter-flow\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n* var iterHead = require( '@stdlib/iter-head' );\n* var iterSome = require( '@stdlib/iter-some' );\n* var iterFlow = require( '@stdlib/iter-flow' );\n*\n* // Create a \"fluent\" interface:\n* var FluentIterator = iterFlow({\n*     'head': iterHead,\n*     'some': iterSome\n* });\n*\n* // Create a source iterator:\n* var arr = array2iterator( [ 0, 0, 1, 1, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* var it = new FluentIterator( arr );\n*\n* var bool = it.head( 5 ).some( 3 );\n* // returns true\n*\n* // Create another source iterator:\n* arr = array2iterator( [ 0, 0, 1, 0, 1, 0, 0, 1, 0, 1 ] );\n*\n* // Create a new iterator:\n* it = new FluentIterator( arr );\n*\n* bool = it.head( 5 ).some( 3 );\n* // returns false\n*/\n\n// MODULES //\n\nvar iterFlow = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterFlow;\n"],"names":["setNonEnumerableReadOnly","require$$0","setNonEnumerable","require$$1","isObject","require$$2","isFunction","require$$3","isIteratorLike","require$$4","objectKeys","require$$5","iteratorSymbol","require$$6","format","require$$7","lib","methods","keys","k","f","i","TypeError","FluentIterator","iterator","this","createMethod","iterFcn","args","out","_source","arguments","length","push","apply","prototype","_done","done","next","value"],"mappings":";;wtBAwBA,IAAIA,EAA2BC,EAC3BC,EAAmBC,EACnBC,EAAWC,EACXC,EAAaC,EACbC,EAAiBC,EACjBC,EAAaC,EACbC,EAAiBC,EACjBC,EAASC,EAuMb,ICvKAC,EDqBA,SAAmBC,GAClB,IAAIC,EACAC,EACAC,EACAC,EACJ,IAAMjB,EAAUa,GACf,MAAM,IAAIK,UAAWR,EAAQ,QAASG,IAWvC,SAASM,EAAgBC,GACxB,KAAQC,gBAAgBF,GACvB,OAAO,IAAIA,EAAgBC,GAE5B,IAAMhB,EAAgBgB,GACrB,MAAM,IAAIF,UAAWR,EAAQ,QAASU,IAIvC,OAFAxB,EAA0ByB,KAAM,UAAWD,GAC3CtB,EAAkBuB,KAAM,SAAS,GAC1BA,KAsER,SAASC,EAAcC,GACtB,OAUA,WACC,IAAIC,EACAC,EACAR,EAEJ,KAAOI,gBAAgBF,GACtB,MAAM,IAAID,UAAWR,EAAQ,UAG9B,IADAc,EAAO,CAAEH,KAAKK,SACRT,EAAI,EAAGA,EAAIU,UAAUC,OAAQX,IAClCO,EAAKK,KAAMF,UAAWV,IAKvB,GAHAQ,EAAMF,EAAQO,MAAO,KAAMN,GAGtBpB,EAAgBqB,GACpB,OAAO,IAAIN,EAAgBM,GAE5B,OAAOA,GAMT,IA/FA7B,EAA0BuB,EAAeY,UAAW,QAAQ,WAC3D,KAAOV,gBAAgBF,GACtB,MAAM,IAAID,UAAWR,EAAQ,UAE9B,OAAKW,KAAKW,MACF,CACNC,MAAQ,GAGHZ,KAAKK,QAAQQ,UAWrBtC,EAA0BuB,EAAeY,UAAW,UAAU,SAAiBI,GAC9E,KAAOd,gBAAgBF,GACtB,MAAM,IAAID,UAAWR,EAAQ,UAG9B,OADAW,KAAKW,OAAQ,EACRL,UAAUC,OACP,CACNO,MAASA,EACTF,MAAQ,GAGH,CACNA,MAAQ,MAKLzB,GAWJZ,EAA0BuB,EAAeY,UAAWvB,GAAgB,WACnE,OAAOa,QA6CTP,EAAOR,EAAYO,GACbI,EAAI,EAAGA,EAAIH,EAAKc,OAAQX,IAAM,CAGnC,GADAD,EAAIH,EADJE,EAAID,EAAMG,KAEJf,EAAYc,GACjB,MAAM,IAAIE,UAAWR,EAAQ,QAASK,EAAGC,IAE1CpB,EAA0BuB,EAAeY,UAAWhB,EAAGO,EAAcN,IAGtE,OAAOG"}